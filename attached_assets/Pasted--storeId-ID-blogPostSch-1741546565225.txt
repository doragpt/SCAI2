以下のエラーメッセージは、送信データの storeId が数値として有効な正の整数になっていない場合に発生します。

特に「店舗IDの形式が正しくありません」というエラーは、blogPostSchema の storeId のバリデーション（`.int().positive(...)`）に引っかかっているためです。

**【現状確認ポイント】**

1. **ユーザー情報の取得状況**  
   ・コンソールには Auth 状態として user.userId が 14 と表示されていますが、送信時に Number(user.userId) の結果が NaN になっているようです。  
   ・これから考えられるのは、ユーザー情報が更新されるタイミングや、user.userId に不正な文字列（例えば "NaN" など）が入っている可能性です。

2. **フォーム初期値と useEffect の動作**  
   ・defaultValues では storeId を `Number(initialData?.storeId || user.userId)` として設定しています。  
   ・また、useEffect で user.userId が存在する場合に form.setValue("storeId", Number(user.userId)) を呼んでいますが、この時点で user.userId の値が不正であれば NaN になってしまいます。

**【具体的な調査・修正指示】**

1. **ユーザー情報の値を精査する**  
   ・handleSubmit の直前で、以下のように user.userId とその型・値をコンソール出力してください：
   ```tsx
   console.log("user.userId =", user.userId, "parsed:", Number(user.userId), "typeof:", typeof user.userId);
   ```
   ・これにより、AuthProvider から取得している user.userId が正しい数値または数値文字列か、または誤った値（例えば "NaN" や空文字列）が入っていないか確認してください。

2. **AuthProvider 側の実装確認**  
   ・AuthProvider（もしくは useAuth() の実装）で、ユーザー情報がどのように取得・保存されているかを再確認し、user.userId が常に数値または数値文字列になっているか確認してください。  
   ・もし user.userId が文字列の場合、数値に変換して利用している部分（Number(user.userId)）で不要な空白や不正な値が混入していないかチェックしてください。

3. **フォーム初期値の設定見直し**  
   ・defaultValues の storeId 部分を、ユーザー情報から直接かつ確実に取得できるようにしてください。たとえば：
   ```tsx
   defaultValues: {
     title: initialData?.title || "",
     content: initialData?.content || "",
     status: initialData?.status || "draft",
     thumbnail: initialData?.thumbnail || null,
     scheduledAt: initialData?.scheduledAt || null,
     storeId: user ? Number(user.userId) : undefined,
   }
   ```
   ・また、useEffect 内での form.setValue("storeId", Number(user.userId)) の結果もコンソールに出力して確認してください。

4. **送信処理での guard チェックの強化**  
   ・handleSubmit 内で、以下のように parsedStoreId を明示的にチェックし、問題があればエラーメッセージを詳細に出力してください：
   ```tsx
   const parsedStoreId = Number(user.userId);
   if (isNaN(parsedStoreId)) {
     toast({
       variant: "destructive",
       title: "エラー",
       description: "店舗IDの形式が正しくありません（user.userId: " + user.userId + "）",
     });
     return;
   }
   ```
   ・これにより、実際にどの値が渡されているかを把握できます。

5. **ユーザー情報が取得されるまでフォーム表示を保留する**  
   ・すでに「if (!user) return …」としてローディング表示を入れていますが、AuthProvider 側でユーザー情報が完全に取得されるタイミングを再確認してください。  
   ・必要に応じて、ユーザー情報が安定するまで送信ボタンを disabled にする実装も検討してください。

**【まとめ】**

- **まず、handleSubmit 前後で user.userId の値と型を正確にログ出力し、想定通りの値になっているか確認する。**
- **AuthProvider や useAuth() の実装を再確認し、user.userId が正しく取得・管理されていることを保証する。**
- **フォームの初期値および useEffect での storeId のセット処理で、常に Number(user.userId) が正しくセットされているかチェックする。**
- **送信処理内で、parsedStoreId が NaN であれば詳細なエラーメッセージを表示して早期に処理を中断する。**

これらの対応により、「店舗IDの形式が正しくありません」というエラーが解消され、バックエンドに正しい店舗IDが送信されるはずです。

何か不明点があれば、追加でログや詳細なコードを共有してください。よろしくお願いいたします。