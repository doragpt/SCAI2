現在のエラー原因
コンソールログには「invalid input syntax for type json」というエラーが発生しており、エラー詳細には

Token "顔出し不要で安心" is invalid
とあります。

このエラーは、PostgreSQL が受け取った JSON データを正しい形式として認識できない場合に発生します。
ログの検証結果からは、以下が考えられます：

対象フィールドの問題（例: privacy_measures）

送信データの中に、"privacy_measures" フィールドが存在しており、その値が "顔出し不要で安心" という文字列になっています。

JSONB 型のカラムに文字列をそのまま渡す場合、正しい JSON 文字列としては "\"顔出し不要で安心\"" のようにダブルクォートで囲まれた状態である必要があります。

つまり、privacy_measures など、JSONB 型として定義されているフィールドが、単なるプレーンな文字列になっているため、PostgreSQL が構文エラーとして拒否している可能性があります。

他のJSONBフィールドの未正規化

design_settings や gallery_photos、requirements などは十分に検証されているように見えますが、エラー内容からは特定のフィールド（今回の場合は「顔出し不要で安心」という値）に起因しているため、特に privacy_measures など、文字列で設定している項目が影響していると考えられます。

Drizzle ORM のシリアライズ処理の問題

既にSQLテンプレートリテラルを排除し、Drizzle ORM の自動シリアライズに任せる方針に変更しましたが、渡される値がすでにプレーンな文字列の場合、ORM 側で適切な JSON 形式に変換されない可能性があります。

次に取るべき具体的な対応ステップ
privacy_measures（およびその他文字列型のJSONBフィールド）の確認

DBスキーマを再確認し、privacy_measures やその他の文字列を保存する予定のフィールドが JSONB 型になっているかをチェックしてください。

もしこれらのフィールドは単なるテキストとして扱いたいのであれば、DBカラムの型を TEXT に変更するか、もしくは送信時に JSON.stringify を適用して正しい JSON 文字列（例: "\"顔出し不要で安心\""）に変換してください。

更新処理直前のデバッグログの強化

サーバー側の更新処理直前に、すべての JSONB フィールドの最終データ状態をログ出力して、各フィールドが正しい JSON 形式になっているかを確認してください。

例として、privacy_measures の値がどのようになっているかを確認し、必要であれば JSON.stringify を適用するなどの対策を行ってください。

クライアント側の送信データ検証

特に job-form-tabs.tsx で送信されるデータの中で、privacy_measures などが正しい形式（配列やオブジェクト、もしくは JSON 文字列）になっているかを確認してください。

必要であれば、送信前に該当フィールドを明示的に JSON.stringify してから送信するように修正してください。

ORM のシリアライズ処理の動作確認

Drizzle ORM が受け取る前に、データが正しい形式の JavaScript オブジェクトになっているかを再度検証し、特に文字列フィールドの場合は、ORM の自動変換がどのように動作するかを確認してください。

最小限のテストケースの実施

privacy_measures だけ、または特定のJSONBフィールドのみを含む更新リクエストを作成し、エラーが再現するか切り分けるテストを実施してください。

エンジニア向け具体的な指示例
件名：PATCH /api/store/profile の JSONB型更新エラー（invalid input syntax for type json）対策

お疲れ様です。

現在、店舗プロフィールの更新時に「invalid input syntax for type json」のエラーが発生しており、ログからは "Token "顔出し不要で安心" is invalid" と示されています。これは、privacy_measures などの JSONB 型フィールドに、プレーンな文字列 "顔出し不要で安心" が渡されているため、正しい JSON 文字列として認識されていないことが原因と考えられます。

【現在の修正内容】

クライアント側では、special_offers の type を強制的に "bonus" に統一し、送信前のデータ検証・正規化を強化。

サーバー側では、processSpecialOffers 関数で特別オファーが必ず配列として処理されるようにし、requirements も IIFEパターンで明示的にオブジェクトとして構築するように変更しました。

SQLテンプレートリテラルを排除し、Drizzle ORM の標準シリアライズ機能に任せる方式に統一済みです。

【考えられる原因】

privacy_measures など、特に単なる文字列として保存されるべきフィールドが、JSONB 型で定義されている場合、プレーンな文字列は有効なJSON形式（ダブルクォートで囲む必要がある）になっていない。

design_settings や gallery_photos など、他の JSONB 型フィールドに同様の不整合がある可能性。

【対応手順】

DBスキーマを再確認してください。もし privacy_measures などは単なるテキスト情報で良い場合、カラム型を TEXT に変更することを検討してください。
もしくは、更新処理時に該当フィールドに対して JSON.stringify を適用し、正しい JSON文字列（例: ""顔出し不要で安心""）に変換してください。

サーバー側の更新処理直前に、以下のようなログを追加し、各 JSONB フィールドの最終的なデータ形式を検証してください：

typescript
コピーする
logger.info("DB更新直前のフィールド検証:", {
  privacyMeasures: JSON.stringify(data.privacy_measures),
  designSettings: JSON.stringify(data.design_settings).substring(0, 100),
  galleryPhotos: JSON.stringify(data.gallery_photos).substring(0, 100),
  // その他のフィールドも同様に
});
クライアント側（job-form-tabs.tsx）でも、送信前に対象フィールドが正しい形式になっているかチェックし、必要であれば明示的に JSON.stringify を実施してください。

最小限のテストケース（例えば、privacy_measures のみ更新するリクエスト）を実施し、問題が切り分けられるか検証してください。

これらの対応を実施して、各フィールドの送信前とDB更新直前のデータ状態を詳細に確認してください。結果を踏まえて、再度エラーの有無をご報告いただければと思います。

よろしくお願いいたします。

