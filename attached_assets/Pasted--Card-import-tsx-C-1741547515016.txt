以下のエラーメッセージは、コンポーネント「Card」が現在のスコープに存在しない（import が正しく行われていない）ために発生しています。具体的には、ブログエディタ内で

```tsx
<Card className="max-w-4xl mx-auto">
  {/* ... */}
</Card>
```

と記述していますが、「Card」が定義されていないというエラーが出ています。

以下の手順で原因を特定し、修正を進めてください：

---

### 1. インポートの確認

- **パスが正しいか確認する**  
  現在、`@/components/ui/card` から Card コンポーネントをインポートしています。  
  - プロジェクトのディレクトリ構造を確認し、`src/components/ui/card.tsx`（または同等のファイル）が存在するかチェックしてください。
  - エイリアス `@/` が正しく設定されているか（tsconfig.json や vite.config.js の設定）も確認してください。

- **エクスポート内容の確認**  
  `card.tsx`（または該当ファイル）内で、`Card` やその他関連コンポーネント（CardContent、CardHeader、CardTitle、CardDescription、CardFooter）が正しくエクスポートされているか確認してください。  
  例：
  ```tsx
  // 例: src/components/ui/card.tsx
  export function Card({ children, ...props }: { children: React.ReactNode }) {
    return <div {...props}>{children}</div>;
  }
  // 同様に、他のコンポーネントもエクスポートする
  ```
  ※もし default export になっている場合は、import 文もそれに合わせて修正する必要があります。

---

### 2. モジュール解決の確認

- **エイリアスの設定**  
  `@/components/ui/card` のようなエイリアスを使用している場合、tsconfig.json や vite.config.js の `resolve.alias` 設定が正しいか確認してください。  
  例：
  ```json
  // tsconfig.json の例
  {
    "compilerOptions": {
      "baseUrl": "./src",
      "paths": {
        "@/*": ["*"]
      }
    }
  }
  ```
  ※この設定が間違っていると、意図したファイルがインポートされず「Card is not defined」となる可能性があります。

---

### 3. コンポーネント名の重複や誤字の確認

- **大文字小文字の一致**  
  コンポーネントの名前「Card」が、エクスポート時とインポート時で同じ大文字小文字になっているか確認してください。

- **名前空間の競合**  
  プロジェクト内で他に同名の変数やコンポーネントが存在していないか確認してください。

---

### 4. ログ出力でのデバッグ

- ブラウザのコンソールで、`console.log(Card)`（または Card に関する値）を出力し、Card が正しくインポートされているか確認してください。  
  例：
  ```tsx
  import { Card } from "@/components/ui/card";
  console.log("Card:", Card);
  ```
  このログが `undefined` になっている場合、インポートパスまたはエクスポートが正しくない可能性が高いです。

---

### 5. 最後に

- **再ビルド・再起動**  
  設定やファイルを修正した後、Vite のキャッシュが影響している可能性もあるため、一度サーバーを再起動（もしくはキャッシュクリア）してみてください。

---

【まとめ】

1. `@/components/ui/card` のパスと内容を確認し、`Card`（および関連コンポーネント）が正しくエクスポートされているか確認する。  
2. エイリアス設定（tsconfig.json、vite.config.js）をチェックして、パスが正しく解決されているか確認する。  
3. インポート文と実際のエクスポートが一致しているか、また大文字小文字も合わせる。  
4. デバッグ用に `console.log(Card)` を追加して、Card が正しく取得されているか確認する。  
5. 修正後、ビルド・開発サーバーを再起動して再確認する。

以上の手順で「Card is not defined」のエラーを解消できるはずです。引き続き問題がある場合は、具体的なファイル構成や設定内容を共有してください。