以下のエラー「店舗IDが取得できません」は、フォーム送信時に useAuth() から取得している user オブジェクトの userId が undefined または null になっている場合に発生します。コンソールのログを見ると、Auth 状態は最終的には user.userId = 14 として更新されているようですが、送信時点でユーザー情報がまだ確定していない可能性があります。

以下の点を確認・対策してください。

---

### 1. ユーザー情報の非同期取得のタイミングを確認

- **問題点**  
  フォームの初期値を設定するタイミングで、user?.userId が undefined になっている可能性があります。また、送信処理の直前に user がまだロードされていない場合もエラーとなります。

- **対策**  
  - **フォーム表示前にユーザー情報が確実にロードされているか確認する。**  
    たとえば、AuthProvider の状態がまだローディング中の場合はローディングインジケーターを表示し、ユーザー情報が確定してからフォームを表示するようにします。
  - **送信ボタンを user が取得できるまで無効にする。**  
    送信時に user が undefined の場合はボタンを disable にして、誤って送信しないようにします。

  例：
  ```tsx
  if (!user) {
    return <div>Loading...</div>;
  }
  ```

---

### 2. useEffect での storeId のセット処理を確認

- **問題点**  
  useEffect を使ってフォームの storeId を更新していますが、user 情報が更新されるタイミングとフォーム送信のタイミングにズレがある可能性があります。

- **対策**  
  - 現在のコードは以下のようになっていますが、user が存在する場合のみ確実に更新するように確認してください。
  ```tsx
  useEffect(() => {
    if (user?.userId) {
      form.setValue("storeId", user.userId);
    }
  }, [user, form]);
  ```
  - 上記の処理が確実に実行されるよう、AuthProvider 側の実装（user の更新タイミング）も再確認してください。

---

### 3. フォーム送信処理内でのチェックの改善

- **問題点**  
  現在、handleSubmit 内で  
  ```tsx
  if (!user?.userId) {
    throw new Error("店舗IDが取得できません");
  }
  ```  
  としているため、user がまだ undefined の状態で送信されるとエラーになります。

- **対策**  
  - 送信前に user が確実に存在するかチェックし、存在しなければ送信を中断する（またはローディング状態にする）。
  - もしくは、送信時に form.getValues() から storeId を取得するのではなく、常に最新の user.userId を直接利用するようにする。

  例：
  ```tsx
  const formData = {
    title: currentValues.title,
    content: currentValues.content,
    status: status,
    thumbnail: currentValues.thumbnail,
    storeId: user.userId, // 常に最新の user から取得
    scheduledAt: status === "scheduled" ? new Date(scheduledDateTime).toISOString() : null,
  };
  ```

---

### 4. 送信ボタンやフォームのレンダリング条件の見直し

- **対策**  
  - ユーザー情報が取得できるまでフォーム全体をレンダリングしない（もしくは送信ボタンを disable にする）ことで、user が未定義の状態で送信されるのを防ぐ。
  - たとえば、`if (!user) return <LoadingSpinner />;` のようにする。

---

### まとめ

1. **Auth 状態が確実に取得されるまで、フォームのレンダリングを保留するか、送信ボタンを無効にする。**
2. **useEffect でユーザー情報が更新されたときに、必ず form.setValue("storeId", user.userId) を実行する。**
3. **フォーム送信時には、user.userId を直接参照するか、user が存在するかチェックして送信処理を中断する。**

これらの対策を講じることで、「店舗IDが取得できません」というエラーは解消され、正しく店舗IDが送信できるようになるはずです。必要に応じて、AuthProvider の実装やユーザー情報の取得タイミングも見直してください。